#
# Most of these settings are taken from here:
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml
#

version: 1.0.{build}

shallow_clone: true

build: off

cache:
  - '%LOCALAPPDATA%\pip\Cache'

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
    COVERALLS_REPO_TOKEN:
      secure: E2OdB4emY2n4Kgq0EKxI70afKNL79co9jktA9

  matrix:
    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.13
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x" # currently 3.5.3
      PYTHON_ARCH: "64"

init:
  - "ECHO %PYTHON%"
  - ps: "ls C:/Python*"

install:
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install requirements
  - ps: "cat requirements.txt | ?{$_ -notmatch 'dnspython'} > req.txt"
  - "%CMD_IN_ENV% pip install -r req.txt"
  - ps: "if ($env:PYTHON -like '*Python2*') { pip install dnspython mock} else { pip install dnspython3 }"


before_test:
  - "%CMD_IN_ENV% pip install coveralls"

test_script:
  # Run the project tests
  - "copy local_settings.example.py local_settings.py /Y"
  - "%CMD_IN_ENV% coverage run --source=. manage.py test test/"

after_test:
  - "%CMD_IN_ENV% coveralls"
