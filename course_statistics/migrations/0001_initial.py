# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-08 15:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crowdsourcing', '__first__'),
        ('course', '0102_learningwhat_specific_migrate'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionPerParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('filled', 'Filled'), ('unfilled', 'Unfilled')], max_length=50, verbose_name='State')),
                ('participation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.Participation', verbose_name='Participation')),
            ],
            options={
                'verbose_name_plural': 'Survey Question Status',
                'ordering': ('question__fieldname', 'participation__user__institutional_id'),
                'verbose_name': 'Survey Question Status',
            },
        ),
        migrations.CreateModel(
            name='StatisticsQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crowdsourcing.Question')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.Course', verbose_name='Course')),
            ],
            options={
                'verbose_name_plural': 'Statistics Questions',
                'ordering': ('course', 'fieldname'),
                'verbose_name': 'Statistics Question',
            },
            bases=('crowdsourcing.question',),
        ),
        migrations.AddField(
            model_name='questionperparticipant',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course_statistics.StatisticsQuestion', verbose_name='Statistics Question'),
        ),
        migrations.AlterUniqueTogether(
            name='statisticsquestion',
            unique_together=set([('course',)]),
        ),
    ]
